{"version":3,"sources":["navigation.js","components/Header/index.js","components/Header/Header.js","constants.js","containers/Homepage/Homepage.js","state/ducks/books/action.js","state/ducks/books/types.js","containers/Homepage/index.js","containers/AddBook/AddBook.js","routes.js","components/Main/Main.js","components/Main/index.js","components/MainLayout/index.js","components/MainLayout/MainLayout.js","components/AddBook/AddBookForm.js","components/AddBook/index.js","components/Homepage/BookStyles.js","components/Homepage/Book.js","components/Homepage/Books.js","components/Homepage/FilterSortBarStyles.js","components/Homepage/FilterSortBar.js","App.js","serviceWorker.js","state/ducks/books/reducers.js","state/ducks/books/index.js","state/store.js","history.js","index.js"],"names":["navigation","left","title","to","right","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","className","map","nav","NavItem","NavLink","NavbarText","categories","ratings","statuses","apiHost","Homepage","props","state","bookViewNumber","this","getBooks","loading","allBooks","books","filteredBooks","filter","book","category","searchTerm","toLowerCase","indexOf","author","sortedBooks","sortTerm","sort","book1","book2","console","log","parseInt","length","items","view","Button","setState","Container","React","Component","mapDispatchToProps","dispatch","type","axios","get","then","result","payload","data","catch","err","connect","AddBook","id","routerProps","match","params","isEdit","componentProps","Row","Col","xs","routes","path","exact","component","Main","route","Comp","MainLayout","document","Children","children","validationSchema","Yup","shape","required","review","min","addBook","values","history","post","push","AddBookForm","withRouter","initialValues","description","rating","imageUrl","status","goodread","onSubmit","enableReinitialize","errors","handleChange","touched","handleSubmit","handleBlur","isSubmitting","Form","FormGroup","Label","for","Input","name","placeholder","value","onChange","invalid","FormFeedback","score","StyledBookCard","styled","Card","Book","CardImg","top","width","src","alt","CardBody","CardText","CardLink","target","href","Books","item","StyledNavbarText","active","StyledInputGroup","InputGroup","changeFilter","search","activeFilter","fluid","style","padding","InputGroupAddon","addonType","InputGroupText","e","App","Boolean","window","location","hostname","initialState","reducer","action","rootReducer","combineReducers","reducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","createBrowserHistory","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.18ca4c96.chunk.js","sourcesContent":["const navigation = {\n    left: [\n        {\n            title: \"HomePage\",\n            to: \"/\",\n        },\n        {\n            title: \"Read Books\",\n            to: \"/read-books\",\n        },\n    ],\n    right: [\n        {\n            title: \"+ Add Book\",\n            to: \"/add-book\",\n        },\n    ],\n};\n\nexport default navigation;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./styles\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarText,\n} from \"reactstrap\";\nimport navigation from \"../../navigation\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div>\n            <Navbar color=\"dark\" dark expand=\"md\">\n                <NavbarBrand tag={Link} to=\"/\">\n                    BookShelf App\n                </NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        {navigation.left.map((nav) => {\n                            return (\n                                <NavItem>\n                                    <NavLink tag={Link} to={nav.to}>\n                                        {nav.title}\n                                    </NavLink>\n                                </NavItem>\n                            );\n                        })}\n                    </Nav>\n                    {navigation.right.map((nav) => {\n                        return (\n                            <NavbarText>\n                                <NavLink tag={Link} to={nav.to}>\n                                    {nav.title}\n                                </NavLink>\n                            </NavbarText>\n                        );\n                    })}\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default Header;\n","export const categories = [\"JavaScript\", \"HTML\", \"CSS\", \"Python\", \"JAVA\"];\nexport const ratings = [1, 2, 3, 4, 5];\nexport const statuses = [\"Not read\", \"Read\"];\nexport const apiHost = \"https://5ebf287d00eabe0016fa39aa.mockapi.io/\";\n// export const apiHost = \"https://5eb6ac52875f1a00167e0faf.mockapi.io\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Books, FilterSortBar } from \"../../components\";\nimport { getBooks } from \"../../state/ducks/books/action\";\nimport { Container, Button } from \"reactstrap\";\n\nclass Homepage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { bookViewNumber: 3 };\n    }\n\n    componentDidMount() {\n        this.props.getBooks();\n    }\n\n    render() {\n        if (this.props.loading) {\n            return <h1>BOOKS ARE LOADING...</h1>;\n        }\n        const allBooks = this.props.books;\n        let filteredBooks = [];\n        /// Categorye gore filter\n        if (this.props.filter) {\n            filteredBooks = allBooks.filter((book) => {\n                return book.category === this.props.filter;\n            });\n        } else {\n            filteredBooks = allBooks;\n        }\n\n        /// Searchteme gore filter\n        if (this.props.searchTerm) {\n            filteredBooks = filteredBooks.filter((book) => {\n                return (\n                    book.title\n                        .toLowerCase()\n                        .indexOf(this.props.searchTerm.toLowerCase()) > -1 ||\n                    book.author\n                        .toLowerCase()\n                        .indexOf(this.props.searchTerm.toLowerCase()) > -1\n                );\n            });\n        }\n\n        // Sorting\n        let sortedBooks = [];\n        if (this.props.sortTerm) {\n            sortedBooks = [...filteredBooks].sort((book1, book2) => {\n                console.log(book1, book2, this.props.sortTerm);\n                return (\n                    parseInt(book2[this.props.sortTerm]) -\n                    parseInt(book1[this.props.sortTerm])\n                );\n            });\n        } else {\n            sortedBooks = filteredBooks;\n        }\n\n        let books = \"\";\n        if (sortedBooks.length < 1) {\n            books = <h2>NO BOOKS HERE</h2>;\n        } else {\n            books = (\n                <Books items={sortedBooks} view={this.state.bookViewNumber} />\n            );\n        }\n        return (\n            <div>\n                <FilterSortBar />\n                <Button\n                    onClick={() => {\n                        this.setState({ bookViewNumber: 12 });\n                    }}\n                >\n                    List View\n                </Button>{\" \"}\n                <Button\n                    onClick={() => {\n                        this.setState({ bookViewNumber: 3 });\n                    }}\n                >\n                    Item View\n                </Button>\n                <Container>\n                    <div className=\"books-holder\">{books}</div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        books: state.books.data,\n        loading: state.books.loading,\n        filter: state.books.filter,\n        searchTerm: state.books.searchTerm,\n        sortTerm: state.books.sortTerm,\n    };\n};\n\nconst mapDispatchToProps = {\n    getBooks,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\n","import * as Actions from \"./types\";\nimport axios from \"axios\";\nimport { apiHost } from \"../../../constants\";\n\nexport const addBook = (values, history) => {\n    return (dispatch) => {\n        axios\n            .post(`${apiHost}/books`, values)\n            .then((result) => {\n                dispatch({ type: Actions.ADD_BOOK, payload: result.data });\n                history.push(\"/\");\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const getBooks = () => {\n    return (dispatch) => {\n        dispatch({ type: Actions.LOAD_BOOKS });\n        axios\n            .get(`${apiHost}/books`)\n            .then((result) => {\n                dispatch({ type: Actions.SET_BOOKS, payload: result.data });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n\nexport const setFilter = (filter) => {\n    return (dispatch) => {\n        dispatch({ type: Actions.SET_FILTER, payload: filter });\n    };\n};\n\nexport const searchBooks = (searchTerm) => {\n    return (dispatch) => {\n        dispatch({ type: Actions.SEARCH_BOOKS, payload: searchTerm });\n    };\n};\n\nexport const sortBooks = (sortTerm) => {\n    return (dispatch) => {\n        dispatch({ type: Actions.SORT_BOOKS, payload: sortTerm });\n    };\n};\n","const SET_BOOKS = \"SET_BOOKS\";\nconst GET_BOOKS = \"GET_BOOKS\";\nconst ADD_BOOK = \"ADD_BOOK\";\nconst LOAD_BOOKS = \"LOAD_BOOKS\";\nconst SET_FILTER = \"SET_FILTER\";\nconst SEARCH_BOOKS = \"SEARCH_BOOKS\";\nconst SORT_BOOKS = \"SORT_BOOKS\";\n\nexport {\n    SET_BOOKS,\n    GET_BOOKS,\n    ADD_BOOK,\n    LOAD_BOOKS,\n    SET_FILTER,\n    SEARCH_BOOKS,\n    SORT_BOOKS,\n};\n","import Homepage from \"./Homepage\";\n\nexport default Homepage;\n","import React from \"react\";\nimport { AddBookForm } from \"../../components\";\nimport { Row, Col } from \"reactstrap\";\nimport axios from \"axios\";\nimport { apiHost } from \"../../constants\";\n\nclass AddBook extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            book: \"\",\n        };\n    }\n\n    componentDidMount() {\n        const id = this.props.routerProps.match.params.id;\n        if (id) {\n            axios.get(`${apiHost}/books/${id}`).then((result) => {\n                this.setState({\n                    book: result.data,\n                });\n            });\n        }\n    }\n\n    render() {\n        const isEdit = this.props.componentProps.isEdit;\n        const id = this.props.routerProps.match.params.id;\n        return (\n            <Row>\n                <Col xs={12}>\n                    {isEdit ? <h3>Edit book</h3> : <h3>Add a new book</h3>}\n                </Col>\n                <Col xs={12}>\n                    <AddBookForm isEdit={isEdit} book={this.state.book} />\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default AddBook;\n","import React from \"react\";\nimport { Homepage, AddBook } from \"./containers\";\n\nconst routes = [\n    {\n        title: \"Home Page\",\n        path: \"/\",\n        exact: true,\n        componentProps: {},\n        component: Homepage,\n    },\n    {\n        title: \"Add Book\",\n        path: \"/add-book\",\n        exact: false,\n        componentProps: {},\n        component: AddBook,\n    },\n    {\n        title: \"Edit Book\",\n        path: \"/edit-book/:id\",\n        exact: false,\n        componentProps: {\n            isEdit: true,\n        },\n        component: AddBook,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { MainLayout } from \"../../components\";\n\nconst Main = () => {\n    return (\n        <div>\n            <Switch>\n                {routes.map((route) => {\n                    return (\n                        <Route\n                            path={route.path}\n                            exact={route.exact}\n                            component={(props) => {\n                                const Comp = route.component;\n                                return (\n                                    <MainLayout\n                                        title={route.title}\n                                        routerProps={props}\n                                        componentProps={route.componentProps}\n                                    >\n                                        {Comp}\n                                    </MainLayout>\n                                );\n                            }}\n                        />\n                    );\n                })}\n            </Switch>\n        </div>\n    );\n};\n\nexport default Main;\n","import Main from \"./Main\";\nimport \"./styles.js\";\n\nexport default Main;\n","import MainLayout from \"./MainLayout\";\n\nexport default MainLayout;\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nclass MainLayout extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const title = this.props.title;\n        document.title = title;\n    }\n\n    render() {\n        console.log(this.props);\n        const Children = this.props.children;\n        return (\n            <div>\n                <Children\n                    routerProps={this.props.routerProps}\n                    componentProps={this.props.componentProps}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MainLayout;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    FormFeedback,\n} from \"reactstrap\";\nimport { Formik } from \"formik\";\nimport { categories, ratings, statuses } from \"../../constants\";\nimport { addBook } from \"../../state/ducks/books/action\";\nimport * as Yup from \"yup\";\nimport { withRouter } from \"react-router\";\n\nconst validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is a required field\"),\n    author: Yup.string().required(\"Author is a required field\"),\n    review: Yup.string().min(30, \"Review must be 30 characters or more\"),\n});\n\nconst AddBookForm = (props) => {\n    console.log(props);\n    let initialValues = {\n        title: \"\",\n        author: \"\",\n        category: \"\",\n        description: \"\",\n        rating: \"\",\n        imageUrl: \"\",\n        status: \"\",\n        review: \"\",\n        goodread: \"\",\n    };\n    if (props.isEdit && props.book) {\n        // review gerekli olup olmadigini iyice sordula\n        initialValues = { review: \"\", goodread: \"\", ...props.book };\n    }\n    return (\n        <div>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(values) => {\n                    console.log(values);\n                    props.addBook(values, props.history);\n                }}\n                enableReinitialize={true}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                    <Form onSubmit={handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"title\">Title</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"title\"\n                                id=\"title\"\n                                placeholder=\"Name of the book\"\n                                value={values.title}\n                                onChange={handleChange}\n                                invalid={errors.title}\n                            />\n                            {errors.title && (\n                                <FormFeedback>{errors.title}</FormFeedback>\n                            )}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"author\">Author</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"author\"\n                                id=\"author\"\n                                placeholder=\"Author of the book\"\n                                value={values.author}\n                                onChange={handleChange}\n                                invalid={errors.author}\n                            />\n                            {errors.author && (\n                                <FormFeedback>{errors.author}</FormFeedback>\n                            )}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"imageUrl\">Image URL</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"imageUrl\"\n                                id=\"imageUrl\"\n                                placeholder=\"Image of the book\"\n                                value={values.imageUrl}\n                                onChange={handleChange}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleSelect\">Category</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"category\"\n                                id=\"category\"\n                                value={values.category}\n                                onChange={handleChange}\n                            >\n                                {categories.map((category) => {\n                                    return <option>{category}</option>;\n                                })}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleText\">Description</Label>\n                            <Input\n                                type=\"textarea\"\n                                name=\"description\"\n                                id=\"description\"\n                                value={values.description}\n                                onChange={handleChange}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleSelect\">Rating</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"rating\"\n                                id=\"rating\"\n                                value={values.rating}\n                                onChange={handleChange}\n                            >\n                                {ratings.map((score) => {\n                                    return <option>{score}</option>;\n                                })}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleSelect\">Status</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"status\"\n                                id=\"status\"\n                                value={values.status}\n                                onChange={handleChange}\n                            >\n                                {statuses.map((status) => {\n                                    return <option>{status}</option>;\n                                })}\n                            </Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"review\">Review</Label>\n                            <Input\n                                type=\"textarea\"\n                                name=\"review\"\n                                id=\"review\"\n                                value={values.review}\n                                onChange={handleChange}\n                                invalid={errors.review}\n                            />\n                            {errors.review && (\n                                <FormFeedback>{errors.review}</FormFeedback>\n                            )}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"goodread\">Goodread Link</Label>\n                            <Input\n                                type=\"url\"\n                                name=\"goodread\"\n                                id=\"goodread\"\n                                placeholder=\"url of the book in goodread\"\n                                value={values.goodread}\n                                onChange={handleChange}\n                            />\n                        </FormGroup>\n                        {props.isEdit ? (\n                            <Button color=\"primary\">Save</Button>\n                        ) : (\n                            <Button color=\"primary\">Add</Button>\n                        )}\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = {\n    addBook: addBook,\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(AddBookForm));\n","import AddBookForm from \"./AddBookForm\";\n\nexport default AddBookForm;\n","import styled from \"styled-components\";\nimport { Card } from \"reactstrap\";\n\nexport const StyledBookCard = styled(Card)`\n    height: 444px;\n    .card-img-top {\n        height: 250px;\n    }\n    margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    CardSubtitle,\n    Button,\n    CardLink,\n} from \"reactstrap\";\nimport { StyledBookCard } from \"./BookStyles\";\nimport { Link } from \"react-router-dom\";\n\nconst Book = (props) => {\n    const { imageUrl, rating, title, id } = props;\n    return (\n        <StyledBookCard>\n            <CardImg top width=\"100%\" src={imageUrl} alt={title} />\n            <CardBody>\n                <CardText>\n                    <strong>{`${rating} / 5`}</strong>\n                </CardText>\n                <CardText>{title}</CardText>\n                <CardLink>Details</CardLink>\n                <CardLink>\n                    <Link to={`/edit-book/${id}`}>Edit Book</Link>\n                </CardLink>\n                {\n                    props.goodread && (\n                        <CardLink>\n                            {/* <Link to={`${id}`}>Goodreads Link </Link> */}\n                            <a target=\"_blank\" href={props.goodread}>\n                                Goodreads\n                            </a>\n                        </CardLink>\n                    )\n                    // <CardLink>\n                    //     <Link to={`/edit-book/${id}`}>Link Broke </Link>\n                    // </CardLink>\n                }\n            </CardBody>\n        </StyledBookCard>\n    );\n};\n\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book\";\nimport { Col, Row } from \"reactstrap\";\n\nconst Books = (props) => {\n    return (\n        <Row>\n            {props.items.map((item) => {\n                return (\n                    <Col xs={props.view}>\n                        <Book {...item} />\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nexport default Books;\n","import styled from \"styled-components\";\nimport { NavbarText, InputGroup } from \"reactstrap\";\n\nexport const StyledNavbarText = styled(NavbarText)`\n    margin-left: 15px;\n    color: ${(props) => (props.active ? \"#FF8247\" : \"#035491\")};\n    cursor: pointer;\n`;\n\nexport const StyledInputGroup = styled(InputGroup)`\n    display: inline-flex;\n    width: 50%;\n`;\n","import React from \"react\";\nimport {\n    Nav,\n    Container,\n    Row,\n    Col,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { StyledNavbarText, StyledInputGroup } from \"./FilterSortBarStyles\";\nimport { categories } from \"../../constants\";\nimport {\n    setFilter,\n    searchBooks,\n    sortBooks,\n} from \"../../state/ducks/books/action\";\n\nconst FilterSortBar = (props) => {\n    return (\n        <div>\n            <Container fluid className=\"bg-white\" style={{ padding: \"15px\" }}>\n                <Row>\n                    <Col xs={6}>\n                        <Nav className=\"bg-white\">\n                            <StyledNavbarText>\n                                <strong>Categories:</strong>\n                            </StyledNavbarText>\n                            <StyledNavbarText\n                                active={!props.activeFilter}\n                                onClick={() => {\n                                    props.changeFilter(\"\");\n                                }}\n                            >\n                                All\n                            </StyledNavbarText>\n                            {categories.map((category) => {\n                                return (\n                                    <StyledNavbarText\n                                        active={props.activeFilter === category}\n                                        onClick={() => {\n                                            props.changeFilter(category);\n                                        }}\n                                    >\n                                        {category}\n                                    </StyledNavbarText>\n                                );\n                            })}\n                        </Nav>\n                    </Col>\n\n                    <Col xs={6}>\n                        <StyledInputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>Search </InputGroupText>\n                            </InputGroupAddon>\n                            <Input\n                                placeholder=\"by name or author\"\n                                onChange={(e) => {\n                                    //e.target.value\n                                    props.search(e.target.value);\n                                }}\n                            />\n                        </StyledInputGroup>\n\n                        <StyledInputGroup>\n                            <Input\n                                type=\"select\"\n                                name=\"select\"\n                                id=\"exampleSelect\"\n                                onChange={(e) => {\n                                    props.sort(e.target.value);\n                                }}\n                            >\n                                <option value=\"\">No Sort</option>\n                                <option value=\"alphabetical\">\n                                    Sort Alphabetical\n                                </option>\n                                <option value=\"rating\">Sort by Rating</option>\n                            </Input>\n                        </StyledInputGroup>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        activeFilter: state.books.filter,\n    };\n};\n\nconst mapDispatchToProps = {\n    changeFilter: setFilter,\n    search: searchBooks,\n    sort: sortBooks,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSortBar);\n","import React from \"react\";\nimport { Header, Main } from \"./components\";\n\nfunction App() {\n    return (\n        <div>\n            <Header />\n            <Main />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import * as Actions from \"./types\";\n\nconst initialState = {\n    data: [],\n    loading: false,\n    filter: \"\",\n    searchTerm: \"\",\n    sortTerm: \"\",\n};\n\nconst booksReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Actions.ADD_BOOK:\n            return {\n                ...state,\n                data: [...state.data, action.payload],\n            };\n        case Actions.SET_BOOKS:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false,\n            };\n        case Actions.LOAD_BOOKS:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.SET_FILTER:\n            return {\n                ...state,\n                filter: action.payload,\n            };\n        case Actions.SEARCH_BOOKS:\n            return {\n                ...state,\n                searchTerm: action.payload,\n            };\n        case Actions.SORT_BOOKS:\n            return {\n                ...state,\n                sortTerm: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default booksReducer;\n","import reducer from \"./reducers\";\n\nexport default reducer;\n","import * as reducers from \"./ducks\";\nimport { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst rootReducer = combineReducers(reducers);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(thunkMiddleware)),\n);\n\nexport default store;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./state/store\";\nimport history from \"./history\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter history={history}>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}